.\" Copyright (c) 2017, Martin Kepplinger <martink@posteo.de>
.\"
.\" %%%LICENSE_START(GPLv2+_DOC_FULL)
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, see
.\" <http://www.gnu.org/licenses/>.
.\" %%%LICENSE_END
.\"
.TH "TS_UINPUT" "1" "" "" "tslib"
.SH "NAME"
ts_uinput \- A daemon program creating a tslib-filtered and calibrated input event device

.SH SYNOPSIS
\fBts_uinput\fR [OPTION]

.SH "DESCRIPTION"
.PP
.BR ts_uinput
provides an alternative for using tslib's API in order to get filtered and calibrated touch screen inputs.
Using Linux' uinput system, it
.BR "creates an input event device"
to be used in your environment.
It uses ts_read_mt() and thus supports single and multi touch.
.sp
.sp
\fB\-d, \-\-daemonize\fR
.sp
.RS 4
Start ts_uinput as a daemon and return. The sysfs' input device name of the newly created device is printed to stdout before returning. If \-\-verbose is chosen too, the /dev/input/eventX path to the device node is printed.
.RE

.sp
\fB\-v, \-\-verbose\fR
.sp
.RS 4
Print debug information to stdout and stderr. Only if \-\-daemonize is not chosen. If used together with \-\-daemonize, the path to the created input event device node /dev/input/eventX is printed before the program forks and returns.
.RE

.sp
\fB\-n, \-\-name\fR
.sp
.RS 4
Set the name of the new input event device. Default: \fBts_uinput\fR.
.RE

.sp
\fB\-i, \-\-idev\fR
.sp
.RS 4
Explicitly choose the original input event device for tslib to use. Default: the environment variable \fBTSLIB_TSDEVICE\fR's value.
.RE

.sp
\fB\-f, \-\-fbdev\fR
.sp
.RS 4
Explicitly choose the framebuffer device to use. Default: the environment variable \fBTSLIB_FBDEVICE\fR's value.
.RE

.sp
\fB\-s, \-\-slots\fR
.sp
.RS 4
Explicitly set the possible concurrent touch contacts supported. May be only needed if the original input device doesn't report it.
.RE

.sp
\fB\-b, \-\-nofb\fR
.sp
.RS 4
Read the screen resolution values from the input device, not the framebuffer device.
.RE

.RE

.SH "SEE ALSO"
.PP
ts.conf (5),
ts_calibrate (1),
ts_test (1)
