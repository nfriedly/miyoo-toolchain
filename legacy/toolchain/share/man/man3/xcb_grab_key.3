.TH xcb_grab_key 3  "libxcb 1.12" "X Version 11" "XCB Requests"
.ad l
.SH NAME
xcb_grab_key \- Grab keyboard key(s)
.SH SYNOPSIS
.hy 0
.B #include <xcb/xproto.h>
.SS Request function
.HP
xcb_void_cookie_t \fBxcb_grab_key\fP(xcb_connection_t\ *\fIconn\fP, uint8_t\ \fIowner_events\fP, xcb_window_t\ \fIgrab_window\fP, uint16_t\ \fImodifiers\fP, xcb_keycode_t\ \fIkey\fP, uint8_t\ \fIpointer_mode\fP, uint8_t\ \fIkeyboard_mode\fP);
.br
.hy 1
.SH REQUEST ARGUMENTS
.IP \fIconn\fP 1i
The XCB connection to X11.
.IP \fIowner_events\fP 1i
If 1, the \fIgrab_window\fP will still get the pointer events. If 0, events are not
reported to the \fIgrab_window\fP.
.IP \fIgrab_window\fP 1i
Specifies the window on which the pointer should be grabbed.
.IP \fImodifiers\fP 1i
The modifiers to grab.

Using the special value \fIXCB_MOD_MASK_ANY\fP means grab the pointer with all
possible modifier combinations.
.IP \fIkey\fP 1i
The keycode of the key to grab.

The special value \fIXCB_GRAB_ANY\fP means grab any key.
.IP \fIpointer_mode\fP 1i
One of the following values:
.RS 1i
.IP \fIXCB_GRAB_MODE_SYNC\fP 1i
The state of the keyboard appears to freeze: No further keyboard events are
generated by the server until the grabbing client issues a releasing
\fIAllowEvents\fP request or until the keyboard grab is released.
.IP \fIXCB_GRAB_MODE_ASYNC\fP 1i
Keyboard event processing continues normally.
.RE
.RS 1i


.RE
.IP \fIkeyboard_mode\fP 1i
One of the following values:
.RS 1i
.IP \fIXCB_GRAB_MODE_SYNC\fP 1i
The state of the keyboard appears to freeze: No further keyboard events are
generated by the server until the grabbing client issues a releasing
\fIAllowEvents\fP request or until the keyboard grab is released.
.IP \fIXCB_GRAB_MODE_ASYNC\fP 1i
Keyboard event processing continues normally.
.RE
.RS 1i


.RE
.SH DESCRIPTION
Establishes a passive grab on the keyboard. In the future, the keyboard is
actively grabbed (as for \fIGrabKeyboard\fP), the last-keyboard-grab time is set to
the time at which the key was pressed (as transmitted in the KeyPress event),
and the KeyPress event is reported if all of the following conditions are true:

The keyboard is not grabbed and the specified key (which can itself be a
modifier key) is logically pressed when the specified modifier keys are
logically down, and no other modifier keys are logically down.

Either the grab_window is an ancestor of (or is) the focus window, or the
grab_window is a descendant of the focus window and contains the pointer.

A passive grab on the same key combination does not exist on any ancestor of
grab_window.

The interpretation of the remaining arguments is as for XGrabKeyboard.  The active grab is terminated
automatically when the logical state of the keyboard has the specified key released (independent of the
logical state of the modifier keys), at which point a KeyRelease event is reported to the grabbing window.

Note that the logical state of a device (as seen by client applications) may lag the physical state if
device event processing is frozen.

A modifiers argument of AnyModifier is equivalent to issuing the request for all possible modifier combinations (including the combination of no modifiers).  It is not required that all modifiers specified
have currently assigned KeyCodes.  A keycode argument of AnyKey is equivalent to issuing the request for
all possible KeyCodes.  Otherwise, the specified keycode must be in the range specified by min_keycode
and max_keycode in the connection setup, or a BadValue error results.

If some other client has issued a XGrabKey with the same key combination on the same window, a BadAccess
error results.  When using AnyModifier or AnyKey, the request fails completely, and a BadAccess error
results (no grabs are established) if there is a conflicting grab for any combination.
.SH RETURN VALUE
Returns an \fIxcb_void_cookie_t\fP. Errors (if any) have to be handled in the event loop.

If you want to handle errors directly with \fIxcb_request_check\fP instead, use \fIxcb_grab_key_checked\fP. See \fBxcb-requests(3)\fP for details.
.SH ERRORS
.IP \fIxcb_access_error_t\fP 1i
Another client has already issued a GrabKey with the same button/key
combination on the same window.
.IP \fIxcb_value_error_t\fP 1i
TODO: reasons?
.IP \fIxcb_window_error_t\fP 1i
The specified \fIwindow\fP does not exist.
.SH SEE ALSO
.BR xcb-requests (3),
.BR xcb_grab_keyboard (3)
.SH AUTHOR
Generated from xproto.xml. Contact xcb@lists.freedesktop.org for corrections and improvements.
