.TH xcb_query_font 3  "libxcb 1.12" "X Version 11" "XCB Requests"
.ad l
.SH NAME
xcb_query_font \- query font metrics
.SH SYNOPSIS
.hy 0
.B #include <xcb/xproto.h>
.SS Request function
.HP
xcb_query_font_cookie_t \fBxcb_query_font\fP(xcb_connection_t\ *\fIconn\fP, xcb_fontable_t\ \fIfont\fP);
.PP
.SS Reply datastructure
.nf
.sp
typedef struct xcb_query_font_reply_t {
    uint8_t        \fIresponse_type\fP;
    uint8_t        \fIpad0\fP;
    uint16_t       \fIsequence\fP;
    uint32_t       \fIlength\fP;
    xcb_charinfo_t \fImin_bounds\fP;
    uint8_t        \fIpad1\fP[4];
    xcb_charinfo_t \fImax_bounds\fP;
    uint8_t        \fIpad2\fP[4];
    uint16_t       \fImin_char_or_byte2\fP;
    uint16_t       \fImax_char_or_byte2\fP;
    uint16_t       \fIdefault_char\fP;
    uint16_t       \fIproperties_len\fP;
    uint8_t        \fIdraw_direction\fP;
    uint8_t        \fImin_byte1\fP;
    uint8_t        \fImax_byte1\fP;
    uint8_t        \fIall_chars_exist\fP;
    int16_t        \fIfont_ascent\fP;
    int16_t        \fIfont_descent\fP;
    uint32_t       \fIchar_infos_len\fP;
} \fBxcb_query_font_reply_t\fP;
.fi
.SS Reply function
.HP
xcb_query_font_reply_t *\fBxcb_query_font_reply\fP(xcb_connection_t\ *\fIconn\fP, xcb_query_font_cookie_t\ \fIcookie\fP, xcb_generic_error_t\ **\fIe\fP);
.SS Reply accessors
.HP
xcb_fontprop_t *\fBxcb_query_font_properties\fP(const xcb_query_font_request_t *\fIreply\fP);
.HP
int \fBxcb_query_font_properties_length\fP(const xcb_query_font_reply_t *\fIreply\fP);
.HP
xcb_fontprop_iterator_t \fBxcb_query_font_properties_iterator\fP(const xcb_query_font_reply_t *\fIreply\fP);
.HP
xcb_charinfo_t *\fBxcb_query_font_char_infos\fP(const xcb_query_font_request_t *\fIreply\fP);
.HP
int \fBxcb_query_font_char_infos_length\fP(const xcb_query_font_reply_t *\fIreply\fP);
.HP
xcb_charinfo_iterator_t \fBxcb_query_font_char_infos_iterator\fP(const xcb_query_font_reply_t *\fIreply\fP);
.br
.hy 1
.SH REQUEST ARGUMENTS
.IP \fIconn\fP 1i
The XCB connection to X11.
.IP \fIfont\fP 1i
The fontable (Font or Graphics Context) to query.
.SH REPLY FIELDS
.IP \fIresponse_type\fP 1i
The type of this reply, in this case \fIXCB_QUERY_FONT\fP. This field is also present in the \fIxcb_generic_reply_t\fP and can be used to tell replies apart from each other.
.IP \fIsequence\fP 1i
The sequence number of the last request processed by the X11 server.
.IP \fIlength\fP 1i
The length of the reply, in words (a word is 4 bytes).
.IP \fImin_bounds\fP 1i
minimum bounds over all existing char
.IP \fImax_bounds\fP 1i
maximum bounds over all existing char
.IP \fImin_char_or_byte2\fP 1i
first character
.IP \fImax_char_or_byte2\fP 1i
last character
.IP \fIdefault_char\fP 1i
char to print for undefined character
.IP \fIproperties_len\fP 1i
how many properties there are
.IP \fIdraw_direction\fP 1i
One of the following values:
.RS 1i
.IP \fIXCB_FONT_DRAW_LEFT_TO_RIGHT\fP 1i
TODO: NOT YET DOCUMENTED.
.IP \fIXCB_FONT_DRAW_RIGHT_TO_LEFT\fP 1i
TODO: NOT YET DOCUMENTED.
.RE
.RS 1i


.RE
.IP \fImin_byte1\fP 1i
TODO: NOT YET DOCUMENTED.
.IP \fImax_byte1\fP 1i
TODO: NOT YET DOCUMENTED.
.IP \fIall_chars_exist\fP 1i
flag if all characters have nonzero size
.IP \fIfont_ascent\fP 1i
baseline to top edge of raster
.IP \fIfont_descent\fP 1i
baseline to bottom edge of raster
.IP \fIchar_infos_len\fP 1i
TODO: NOT YET DOCUMENTED.
.SH DESCRIPTION
Queries information associated with the font.
.SH RETURN VALUE
Returns an \fIxcb_query_font_cookie_t\fP. Errors have to be handled when calling the reply function \fIxcb_query_font_reply\fP.

If you want to handle errors in the event loop instead, use \fIxcb_query_font_unchecked\fP. See \fBxcb-requests(3)\fP for details.
.SH ERRORS
This request does never generate any errors.
.SH SEE ALSO
.BR xcb-requests (3)
.SH AUTHOR
Generated from xproto.xml. Contact xcb@lists.freedesktop.org for corrections and improvements.
